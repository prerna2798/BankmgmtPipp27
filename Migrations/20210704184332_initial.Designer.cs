// <auto-generated />
using AuthServiceProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuthServiceProject.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210704184332_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthServiceProject.Models.User", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CitizenStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityProof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InitDeposit")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UId = "R-000",
                            AccountNumber = "6700345528779000",
                            AccountType = "Savings",
                            Address = "45 Church Road Los Angeles",
                            Age = 21,
                            BranchName = "Alaska",
                            CitizenStatus = "Normal",
                            Citizenship = "Other",
                            ConfirmPassword = "P@ssw0rd",
                            Contact = "8811209877",
                            Country = "USA",
                            Dob = "2000-01-16",
                            Email = "thomas234@gmail.com",
                            Gender = "Male",
                            GuardianName = "Steve Jacob",
                            GuardianType = "Father",
                            IdentityProof = "Aadhaar",
                            InitDeposit = 5000,
                            MaritalStatus = "Single",
                            Pan = "1234tytt4987",
                            Password = "P@ssw0rd",
                            RefAccountNo = "5600063211678820",
                            RefAddress = "23 Wiston Road Alaska",
                            RefName = "Martin P",
                            State = "Alaska",
                            UserName = "Thomas Jacob"
                        });
                });

            modelBuilder.Entity("AuthServiceProject.Models.UserLoan", b =>
                {
                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnnualIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrExp")
                        .HasColumnType("int");

                    b.Property<string>("Desig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FatherExp")
                        .HasColumnType("int");

                    b.Property<string>("FatherInc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherOcc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RateOfInterest")
                        .HasColumnType("int");

                    b.Property<string>("RationCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalExp")
                        .HasColumnType("int");

                    b.HasKey("UId");

                    b.ToTable("UserLoans");

                    b.HasData(
                        new
                        {
                            UId = "R-000",
                            AnnualIncome = "400000",
                            ApplyDate = "01-01-2021",
                            CompanyName = "Cognizant",
                            CurrExp = 1,
                            Desig = "PAT",
                            FatherExp = 0,
                            LoanAmount = "300000",
                            LoanDuration = "5",
                            LoanType = "personal",
                            RateOfInterest = 10,
                            TotalExp = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
